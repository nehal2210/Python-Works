sudo apt-get install mysql-server libmysqlclient-dev
mysql -u root -p
SHOW DATABASES;

CREATE DATABASE myFlaskApp;

CREATE TABLE users(id INT(11) AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), username VARCHAR(30), password VARCHAR(100), register_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP);

SHOW TABLES;

DESCRIBE users;

pip install flask-mysqldb
pip install Flask-WTF
pip install passlib

from flask_mysqldb import MySQL
from wtforms import Form , StringField , TextAreaField, PasswordField , validators
from passlib.hash import sha256_crypt
from flask_mysqldb import MYSQL

flash , redirect , url_for , session,logging , request


class RegisterForm(Form):
    name = StringField('Name' , [validators.Length(min=1 , max=50)])
    username = StringField('Username' , [validators.Length(min=4 , max=25)])
    email = StringField('Email' , [validators.Length(min=6 , max=50)])
    password = PasswordField('Password' , [
        validators.DataRequired(),
        validators.EqualTo('confirm' , message = 'Password do not match')
        ])
    confirm = PasswordField('Confirm Password')


    <div class="form-group" >
        {{render_field(form.name , class_="form-control")}}
    </div>


cur = mysql.connection.cursor()
cur.execute("INSERT INTO users(name , email , username , password) VALUES(%s ,%s ,%s, %s))",(name , email , username , password))
mysql.connection.commit()
cur.close()




@app.route('/login' , methods=['GET' , 'POST'])
def login():
    if request.method == 'POST':
        #GET FORM FIELDS
        username = request.form['username']
        password_candid = request.form['password']

        #CREATE CURSOR
        cur = mysql.connection.cursor()
        #GET USER BY USERNAME
        result = cur.execute("SELECT * FROM users WHERE username = %s" ,[username])

        if result > 0:
            #GET STORED HASH
            data = cur.fetchone()
            password = data['password']
            if sha256_crypt.verify(password_candid , password):
                #passed
                session['logged_in'] = True
                session['username'] = username

                flash("You are now logged in " , 'success')
                return redirect(url_for('dashboard'))
            else:
                error = "Invalid LOgin"
                return render_template('login.html' , error=error)
            cur.close()
        else:
            error = "Username not found"
            return render_template('login.html' ,error = error)
    return render_template('login.html')
